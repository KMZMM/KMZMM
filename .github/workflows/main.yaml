name: Run Telegram Bot with Local API Server

on:
  workflow_dispatch: # Manual trigger
  # schedule:
  #   - cron: '0 */6 * * *' # Optional: run every 6 hours to keep alive

env:
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  API_ID: ${{ secrets.API_ID }}
  API_HASH: ${{ secrets.API_HASH }}
  NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 60 # Increased for large file handling

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        pip install pyTelegramBotAPI requests python-telegram-bot jq

    - name: Setup Ngrok (Official Action)
      uses: ngrok/setup-ngrok@v1
      with:
        ngrok-version: latest
        auth-token: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Download Telegram Bot API Server
      run: |
        wget -O telegram-bot-api.tar.gz https://github.com/tdlib/telegram-bot-api/releases/download/v1.8.4/telegram-bot-api_Linux_x86_64.tar.gz
        tar -xzf telegram-bot-api.tar.gz
        chmod +x telegram-bot-api
        sudo mv telegram-bot-api /usr/local/bin/
        telegram-bot-api --version

    - name: Create Bot API config file
      run: |
        cat > config.json <<EOL
        {
          "local": true,
          "stats_output_path": "",
          "http": {
            "port": 8081,
            "url": ""
          },
          "tg": {
            "use_test_dc": false,
            "api_id": "$API_ID",
            "api_hash": "$API_HASH",
            "stats_enabled": false
          }
        }
        EOL

    - name: Start Ngrok tunnel and extract URL
      run: |
        # Start ngrok tunnel in background
        ngrok http 8081 --log=stdout > ngrok.log 2>&1 &
        
        # Wait for ngrok to start
        sleep 10
        
        # Extract the public URL using proper JSON parsing
        NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.proto=="https") | .public_url')
        
        if [ -z "$NGROK_URL" ]; then
          echo "❌ Failed to get Ngrok URL. Ngrok log:"
          cat ngrok.log
          exit 1
        fi
        
        echo "✅ Ngrok URL: $NGROK_URL"
        echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

    - name: Start Local Bot API Server
      run: |
        # Start the server in background
        telegram-bot-api --config=config.json --http-port=8081 --log=bot-api.log &
        sleep 8 # Give it time to initialize
        echo "✅ Bot API Server started"

    - name: Set Webhook to our Ngrok URL
      run: |
        echo "Setting webhook to: $NGROK_URL/webhook"
        curl -s -f -X GET "https://api.telegram.org/bot$BOT_TOKEN/setWebhook?url=$NGROK_URL/webhook" || echo "Webhook set request completed"

    - name: Run our Python Bot Script
      run: |
        echo "Starting bot with token: $BOT_TOKEN"
        python your_bot_script.py
